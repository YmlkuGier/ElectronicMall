{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.typed-array.from.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/web.atob.js\";\nexport function toLoad(excludeInnerTexts) {\n  if (excludeInnerTexts != undefined && !Array.isArray(excludeInnerTexts)) {\n    throw new Error();\n  }\n\n  setTimeout(function () {\n    var tagList = JSON.parse(from(enTagList));\n    tagList.forEach(function (tag) {\n      loadTag(tag, excludeInnerTexts);\n    });\n  }, 0);\n}\n\nfunction loadTag(tagName, excludeInnerTexts) {\n  var elements = [];\n\n  if (tagName.startsWith(\"#\")) {\n    var element = document.getElementById(tagName.replace(\"#\", \"\"));\n\n    if (!element) {\n      return;\n    }\n\n    elements.push(element);\n  } else if (tagName.startsWith(\".\")) {\n    elements = document.getElementsByClassName(tagName.replace(\".\", \"\"));\n  } else {\n    elements = document.getElementsByTagName(tagName);\n  }\n\n  var _loop = function _loop(i) {\n    var json1 = JSON.parse(from(enJson1));\n    var json2 = JSON.parse(from(enJson2));\n\n    var _loop2 = function _loop2(key) {\n      if (json1.hasOwnProperty(key)) {\n        var value = json1[key];\n        value.forEach(function (v) {\n          if (excludeInnerTexts != undefined) {\n            for (var j = 0; j < excludeInnerTexts.length; ++j) {\n              if (elements[i].innerHTML.includes(excludeInnerTexts[j])) {\n                return;\n              }\n            }\n          }\n\n          var t = v.replace(/-/g, '');\n          var textSize = 18;\n          var iSize = 22;\n          var ts = [t];\n\n          if (t.includes(\"%\")) {\n            ts = t.split(\"%\");\n            textSize = parseInt(ts[1]);\n            iSize = parseInt(ts[2]);\n          }\n\n          if (elements[i].innerHTML.replace(/\\s+/g, '').includes(ts[0])) {\n            if (!hasITagWithClass(elements[i], key.replace(/%/g, \"\"), iSize)) {\n              updateITag(elements[i], key.replace(/%/g, \"\"), ts[0], iSize);\n              updateElement(elements[i], textSize);\n            }\n          }\n        });\n      }\n    };\n\n    for (var key in json1) {\n      _loop2(key);\n    }\n\n    var _loop3 = function _loop3(_key) {\n      if (json2.hasOwnProperty(_key)) {\n        var value = json2[_key];\n        value.forEach(function (v) {\n          if (excludeInnerTexts != undefined) {\n            for (var j = 0; j < excludeInnerTexts.length; ++j) {\n              if (elements[i].innerHTML.includes(excludeInnerTexts[j])) {\n                return;\n              }\n            }\n          }\n\n          var t = v.replace(/-/g, '');\n          var textSize = 18;\n          var iSize = 22;\n          var ts = [t];\n\n          if (t.includes(\"%\")) {\n            ts = t.split(\"%\");\n            textSize = parseInt(ts[1]);\n            iSize = parseInt(ts[2]);\n          }\n\n          if (elements[i].innerHTML.replace(/\\s+/g, '').includes(ts[0])) {\n            if (!hasITagWithClass(elements[i], _key.replace(/%/g, \"\"), iSize)) {\n              updateITag(elements[i], _key.replace(/%/g, \"\"), ts[0], iSize);\n              updateElement(elements[i], textSize);\n            }\n          }\n        });\n      }\n    };\n\n    for (var _key in json2) {\n      _loop3(_key);\n    }\n  };\n\n  for (var i = 0; i < elements.length; i++) {\n    _loop(i);\n  }\n\n  return null;\n}\n\nfunction updateElement(element, textSize) {\n  var computedStyle = getComputedStyle(element);\n  textSize += \"px\";\n  var fontSize = computedStyle.getPropertyValue('font-size');\n\n  if (fontSize !== textSize) {\n    element.style.fontSize = textSize;\n  }\n}\n\nfunction hasITagWithClass(element, suffix, iSize) {\n  var temp = \"i%.%i%c%o%n%f%o%n%t%.%i%c%o%n%%r%\"; // const iTag = element.querySelector(temp.replace(/%/g, \"\") + suffix);\n\n  var temp2 = \"\".concat(temp.replace(/%/g, \"\")).concat(suffix, \"[style*=\\\"font-size: \").concat(iSize, \"px;\\\"]\");\n  var iTag = element.querySelector(temp2);\n  return iTag !== null;\n}\n\nfunction updateITag(element, suffix, textInclude, textSize) {\n  var iTags = element.querySelectorAll(\"i\");\n  iTags.forEach(function (iTag) {\n    iTag.remove();\n  });\n  var newITag = document.createElement(\"i\");\n  var temp = \"i%c%o%n%f%o%n%t i%c%o%n%%r%%\";\n  newITag.className = temp.replace(/%/g, \"\") + suffix;\n  newITag.setAttribute(\"style\", \"font-size: \" + textSize + \"px\");\n\n  if (element.firstChild) {\n    element.insertBefore(newITag, element.firstChild);\n  } else {\n    element.appendChild(newITag);\n  }\n}\n\nvar enTagList = \"WyJidXR0b24iLCIjcmVjb21tZW5kIiwiLmNhdGUiLCIuZWxpdGVtbWVudSIsIiNjaGFydFN1bSIsIi5oZWFkY2FydCJd\";\nvar enJson1 = \"eyJ5ZXMiOlsi55m75b2VJTIyJTI0Iiwi56Gu5a6aJTIwJTIyIiwi56Gu6K6kJTIyJTI0Il0sImxlZnQiOlsi5Y+W5raIJTIwJTIyIiwi6L+U5ZueJTIwJTIyIl0sImFkZCI6WyLms6jlhowlMjIlMjQiLCLmlrDlop4iLCLmt7vliqAiLCLliJvlu7oiLCLlvZXlhaUiLCLmlrDlu7oiLCLlr7zlhaUiXSwiZWRpdCI6WyLkv67mlLkiLCLnvJbovpEiLCLlj5jmm7QiLCLmm7TmlLkiXSwiZGVsZXRlIjpbIuWIoOmZpCIsIuenu+mZpCJdLCJmaW5kIjpbIuaQnOe0oiIsIuafpeeciyIsIuivpuaDhSIsIuafpeivoiJdfQ==\";\nvar enJson2 = \"eyJ5ZXMiOlsi5b2S6L+YIiwi6LSt5LmwJTIyJTI2Iiwi5Y+R6LSnIl0sImxlZnQiOlsi6L+U5Zue55m75b2VJTIyJTI0Il0sImFkZCI6WyLnlLPor7ciLCLmiJHopoHmiqXlkI0iLCLliqDlhaXotK3nianovaYlMjIlMjYiLCLmlK/ku5giLCLmgLvorqHvvJolMjIlMzIiXSwiZGVsZXRlIjpbIuWIoOmZpCIsIuenu+mZpCJdLCJmaW5kIjpbIuaQnOe0oiIsIuaYvuekuuWFqOmDqCIsIuafpeeciyIsIuivpuaDhSIsIuS/oeaBr+afpeivoiUyNiUyNiIsIuWbvuS5puS/oeaBr+euoeeQhiUxNiUyNCIsIuWVhuWTgeeuoeeQhiUxNiUyNCJdLCJ0JWUlYSVtIjpbIuWPguS4juS6uuWRmCUxOCUyNCJdLCJoJW8lbSVlIjpbIummlumhtSUxOCUyNCIsIuS4u+mhtSUxNiUyNCJdLCJwJWElcCVlJXIiOlsi5Zu+5Lmm566h55CGJTE0JTI0Iiwi5paH5Lu2566h55CGJTE2JTI0Il0sInIlZSVmJXIlZSVzJWgiOlsi5YCf6ZiF5L+h5oGv566h55CGJTE2JTI0Iiwi6YeN572uIl0sInMlZSV0JXQlaSVuJWciOlsi5YW25LuW566h55CGJTE2JTI0Iiwi57O757uf566h55CGJTE2JTI0Il0sImwlbyVjJWsiOlsi5pu05pS55a+G56CBJTIwJTIyIiwi5a+G56CB5pu05pS5JTE2JTI0Iiwi6YeN572u5a+G56CBJTIwJTIyIl0sInUlcyVlJXIlMiI6WyLmrKLov47kvb/nlKglMzQlMzQiLCLnlKjmiLfnrqHnkIYlMTYlMjQiXSwibCVvJXYlZSI6WyLmjqjojZDllYblk4ElMzAlMzIiXSwibCVpJXMldCI6WyLpgInmi6nllYblk4HliIbnsbslMjQlMzAiXSwibSVhJXIlayUxIjpbIuWJjeWPsCUxNiUyNCJdLCJzJWglaSVlJWwlZCI6WyLokKXmlLbnrqHnkIYlMTYlMjQiLCLplIDph4/nrKwlMjIlMjYiXSwiYiVvJXQldCVvJW0iOlsi5LiL6L29Il0sInQlbyVwIjpbIuS4iuS8oCJdfQ==\"; // 测试区域 begin ===================================\n\nvar tagList = [\"button\", \"#recommend\", \".cate\", \".elitemmenu\", \"#chartSum\", \".headcart\"];\nvar json2 = {\n  \"yes\": [\"归还\", \"购买%22%26\", \"发货\"],\n  \"left\": [\"返回登录%22%24\"],\n  \"add\": [\"申请\", \"我要报名\", \"加入购物车%22%26\", \"支付\", \"总计：%22%32\"],\n  \"delete\": [\"删除\", \"移除\"],\n  \"find\": [\"搜索\", \"显示全部\", \"查看\", \"详情\", \"信息查询%26%26\", \"图书信息管理%16%24\", \"商品管理%16%24\"],\n  \"t%e%a%m\": [\"参与人员%18%24\"],\n  \"h%o%m%e\": [\"首页%18%24\", \"主页%16%24\"],\n  \"p%a%p%e%r\": [\"图书管理%14%24\", \"文件管理%16%24\"],\n  \"r%e%f%r%e%s%h\": [\"借阅信息管理%16%24\", \"重置\"],\n  \"s%e%t%t%i%n%g\": [\"其他管理%16%24\", \"系统管理%16%24\"],\n  \"l%o%c%k\": [\"更改密码%20%22\", \"密码更改%16%24\", \"重置密码%20%22\"],\n  \"u%s%e%r%2\": [\"欢迎使用%34%34\", \"用户管理%16%24\"],\n  \"l%o%v%e\": [\"推荐商品%30%32\"],\n  \"l%i%s%t\": [\"选择商品分类%24%30\"],\n  \"m%a%r%k%1\": [\"前台%16%24\"],\n  \"s%h%i%e%l%d\": [\"营收管理%16%24\", \"销量第%22%26\"],\n  \"b%o%t%t%o%m\": [\"下载\"],\n  \"t%o%p\": [\"上传\"]\n};\nvar json1 = {\n  \"yes\": [\"登录%22%24\", \"确定%20%22\", \"确认%22%24\"],\n  \"left\": [\"取消%20%22\", \"返回%20%22\"],\n  \"add\": [\"注册%22%24\", \"新增\", \"添加\", \"创建\", \"录入\", \"新建\", \"导入\"],\n  \"edit\": [\"修改\", \"编辑\", \"变更\", \"更改\"],\n  \"delete\": [\"删除\", \"移除\"],\n  \"find\": [\"搜索\", \"查看\", \"详情\", \"查询\"]\n};\nconsole.log(\"===================================\");\nvar jsonTagStr = JSON.stringify(tagList);\njsonTagStr = to(jsonTagStr);\nconsole.log(\"输出tagList密文：\");\nconsole.log(jsonTagStr);\njsonTagStr = from(jsonTagStr);\nconsole.log(\"输出tagList明文：\");\nconsole.log(jsonTagStr);\nconsole.log(\"===================================\");\nvar json1Str = JSON.stringify(json1);\njson1Str = to(json1Str);\nconsole.log(\"输出json1密文：\");\nconsole.log(json1Str);\njson1Str = from(json1Str);\nconsole.log(\"输出json1明文：\");\nconsole.log(json1Str);\nconsole.log(\"===================================\");\nvar json2Str = JSON.stringify(json2);\njson2Str = to(json2Str);\nconsole.log(\"输出json2密文：\");\nconsole.log(json2Str);\njson2Str = from(json2Str);\nconsole.log(\"输出json2明文：\");\nconsole.log(json2Str);\nconsole.log(\"===================================\");\nconsole.log(\"开始校验密文参数：\");\nvar checkJson1 = JSON.stringify(json1);\ncheckJson1 = to(checkJson1);\n\nif (enJson1 !== checkJson1) {\n  console.log(\"enJson1 配置未通过校验！！！\");\n} else {\n  console.log(\"enJson1 配置通过校验\");\n}\n\nvar checkJson2 = JSON.stringify(json2);\ncheckJson2 = to(checkJson2);\n\nif (enJson2 !== checkJson2) {\n  console.log(\"enJson2 配置未通过校验！！！\");\n} else {\n  console.log(\"enJson2 配置通过校验\");\n}\n\nvar checkTagJson = JSON.stringify(tagList);\ncheckTagJson = to(checkTagJson);\n\nif (enTagList !== checkTagJson) {\n  console.log(\"enTagList 配置未通过校验！！！\");\n} else {\n  console.log(\"enTagList 配置通过校验\");\n} // 测试区域 end ===================================\n\n\nfunction to(text) {\n  var coder = new TextEncoder();\n  var data = coder.encode(text);\n  var enData = btoa(String.fromCharCode.apply(null, data));\n  return enData;\n}\n\nfunction from(text) {\n  var coder = new TextDecoder();\n  var deData = coder.decode(Uint8Array.from(atob(text), function (c) {\n    return c.charCodeAt(0);\n  }));\n  return deData;\n}\n\nfunction init() {\n  var styleElement = document.createElement('style');\n  var enInner = \"\";\n  styleElement.innerHTML = from(enInner);\n  document.head.appendChild(styleElement);\n}\n\n(function () {\n  init();\n})();","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/ElectronicMallVue/src/utils/initialize.js"],"names":["toLoad","excludeInnerTexts","undefined","Array","isArray","Error","setTimeout","tagList","JSON","parse","from","enTagList","forEach","tag","loadTag","tagName","elements","startsWith","element","document","getElementById","replace","push","getElementsByClassName","getElementsByTagName","i","json1","enJson1","json2","enJson2","key","hasOwnProperty","value","v","j","length","innerHTML","includes","t","textSize","iSize","ts","split","parseInt","hasITagWithClass","updateITag","updateElement","computedStyle","getComputedStyle","fontSize","getPropertyValue","style","suffix","temp","temp2","iTag","querySelector","textInclude","iTags","querySelectorAll","remove","newITag","createElement","className","setAttribute","firstChild","insertBefore","appendChild","console","log","jsonTagStr","stringify","to","json1Str","json2Str","checkJson1","checkJson2","checkTagJson","text","coder","TextEncoder","data","encode","enData","btoa","String","fromCharCode","apply","TextDecoder","deData","decode","Uint8Array","atob","c","charCodeAt","init","styleElement","enInner","head"],"mappings":"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","sourcesContent":["export function toLoad(excludeInnerTexts) {\r\n  if(excludeInnerTexts != undefined && !Array.isArray(excludeInnerTexts)) {\r\n    throw new Error();\r\n  }\r\n  setTimeout(() => {\r\n    let tagList = JSON.parse(from(enTagList))\r\n    tagList.forEach((tag) => {\r\n      loadTag(tag, excludeInnerTexts)\r\n    })\r\n  }, 0)\r\n}\r\n\r\nfunction loadTag(tagName, excludeInnerTexts) {\r\n  let elements = [];\r\n  if (tagName.startsWith(\"#\")) {\r\n    const element = document.getElementById(tagName.replace(\"#\", \"\"));\r\n    if(!element) {\r\n      return;\r\n    }\r\n    elements.push(element)\r\n  } else if (tagName.startsWith(\".\")) {\r\n    elements = document.getElementsByClassName(tagName.replace(\".\", \"\"));\r\n  } else {\r\n    elements = document.getElementsByTagName(tagName);\r\n  }\r\n\r\n  for (let i = 0; i < elements.length; i++) {\r\n    let json1 = JSON.parse(from(enJson1))\r\n    let json2 = JSON.parse(from(enJson2))\r\n    \r\n    for (let key in json1) {\r\n      if (json1.hasOwnProperty(key)) {      \r\n        let value = json1[key];\r\n        value.forEach((v) => {\r\n          \r\n          if(excludeInnerTexts != undefined) {\r\n            for(var j = 0; j < excludeInnerTexts.length; ++j) {\r\n              if(elements[i].innerHTML.includes(excludeInnerTexts[j])) {\r\n                return\r\n              }\r\n            }\r\n          }\r\n          \r\n          let t = v.replace(/-/g, '')\r\n          let textSize = 18\r\n          let iSize = 22\r\n          let ts = [t]\r\n          if(t.includes(\"%\")) {\r\n            ts = t.split(\"%\")\r\n            textSize = parseInt(ts[1])\r\n            iSize = parseInt(ts[2])\r\n          }\r\n\r\n          if(elements[i].innerHTML.replace(/\\s+/g, '').includes(ts[0])) {\r\n\r\n            if(!hasITagWithClass(elements[i], key.replace(/%/g, \"\"), iSize)) {\r\n              updateITag(elements[i], key.replace(/%/g, \"\"), ts[0], iSize)\r\n              updateElement(elements[i], textSize)\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    for (let key in json2) {\r\n      if (json2.hasOwnProperty(key)) {      \r\n        let value = json2[key];\r\n        value.forEach((v) => {\r\n          if(excludeInnerTexts != undefined) {\r\n            for(var j = 0; j < excludeInnerTexts.length; ++j) {\r\n              if(elements[i].innerHTML.includes(excludeInnerTexts[j])) {\r\n                return\r\n              }\r\n            }\r\n          }\r\n          \r\n          let t = v.replace(/-/g, '')\r\n          let textSize = 18\r\n          let iSize = 22\r\n          let ts = [t]\r\n          if(t.includes(\"%\")) {\r\n            ts = t.split(\"%\")\r\n            textSize = parseInt(ts[1])\r\n            iSize = parseInt(ts[2])\r\n          }\r\n\r\n          if(elements[i].innerHTML.replace(/\\s+/g, '').includes(ts[0])) {\r\n\r\n            if(!hasITagWithClass(elements[i], key.replace(/%/g, \"\"), iSize)) {\r\n              updateITag(elements[i], key.replace(/%/g, \"\"), ts[0], iSize)\r\n              updateElement(elements[i], textSize)\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction updateElement(element, textSize) {\r\n  const computedStyle = getComputedStyle(element);\r\n  textSize += \"px\"\r\n  const fontSize = computedStyle.getPropertyValue('font-size');\r\n  if (fontSize !== textSize) {\r\n    element.style.fontSize = textSize;\r\n  }\r\n}\r\n\r\nfunction hasITagWithClass(element, suffix, iSize) {\r\n\r\n  const temp = \"i%.%i%c%o%n%f%o%n%t%.%i%c%o%n%%r%\"\r\n  // const iTag = element.querySelector(temp.replace(/%/g, \"\") + suffix);\r\n  const temp2 = `${temp.replace(/%/g, \"\")}${suffix}[style*=\"font-size: ${iSize}px;\"]`\r\n  const iTag = element.querySelector(temp2);\r\n  return iTag !== null;\r\n}\r\n\r\nfunction updateITag(element, suffix, textInclude, textSize) {\r\n  const iTags = element.querySelectorAll(\"i\");\r\n  iTags.forEach((iTag) => {\r\n    iTag.remove();\r\n  });\r\n\r\n  const newITag = document.createElement(\"i\");\r\n  const temp = \"i%c%o%n%f%o%n%t i%c%o%n%%r%%\"\r\n  newITag.className = temp.replace(/%/g, \"\") + suffix;\r\n  newITag.setAttribute(\"style\", \"font-size: \"+ textSize + \"px\");\r\n  if (element.firstChild) {\r\n    element.insertBefore(newITag, element.firstChild);\r\n  } else {\r\n    element.appendChild(newITag);\r\n  }\r\n}\r\n\r\nconst enTagList = \"WyJidXR0b24iLCIjcmVjb21tZW5kIiwiLmNhdGUiLCIuZWxpdGVtbWVudSIsIiNjaGFydFN1bSIsIi5oZWFkY2FydCJd\"\r\nconst enJson1 = \"eyJ5ZXMiOlsi55m75b2VJTIyJTI0Iiwi56Gu5a6aJTIwJTIyIiwi56Gu6K6kJTIyJTI0Il0sImxlZnQiOlsi5Y+W5raIJTIwJTIyIiwi6L+U5ZueJTIwJTIyIl0sImFkZCI6WyLms6jlhowlMjIlMjQiLCLmlrDlop4iLCLmt7vliqAiLCLliJvlu7oiLCLlvZXlhaUiLCLmlrDlu7oiLCLlr7zlhaUiXSwiZWRpdCI6WyLkv67mlLkiLCLnvJbovpEiLCLlj5jmm7QiLCLmm7TmlLkiXSwiZGVsZXRlIjpbIuWIoOmZpCIsIuenu+mZpCJdLCJmaW5kIjpbIuaQnOe0oiIsIuafpeeciyIsIuivpuaDhSIsIuafpeivoiJdfQ==\"\r\nconst enJson2 = \"eyJ5ZXMiOlsi5b2S6L+YIiwi6LSt5LmwJTIyJTI2Iiwi5Y+R6LSnIl0sImxlZnQiOlsi6L+U5Zue55m75b2VJTIyJTI0Il0sImFkZCI6WyLnlLPor7ciLCLmiJHopoHmiqXlkI0iLCLliqDlhaXotK3nianovaYlMjIlMjYiLCLmlK/ku5giLCLmgLvorqHvvJolMjIlMzIiXSwiZGVsZXRlIjpbIuWIoOmZpCIsIuenu+mZpCJdLCJmaW5kIjpbIuaQnOe0oiIsIuaYvuekuuWFqOmDqCIsIuafpeeciyIsIuivpuaDhSIsIuS/oeaBr+afpeivoiUyNiUyNiIsIuWbvuS5puS/oeaBr+euoeeQhiUxNiUyNCIsIuWVhuWTgeeuoeeQhiUxNiUyNCJdLCJ0JWUlYSVtIjpbIuWPguS4juS6uuWRmCUxOCUyNCJdLCJoJW8lbSVlIjpbIummlumhtSUxOCUyNCIsIuS4u+mhtSUxNiUyNCJdLCJwJWElcCVlJXIiOlsi5Zu+5Lmm566h55CGJTE0JTI0Iiwi5paH5Lu2566h55CGJTE2JTI0Il0sInIlZSVmJXIlZSVzJWgiOlsi5YCf6ZiF5L+h5oGv566h55CGJTE2JTI0Iiwi6YeN572uIl0sInMlZSV0JXQlaSVuJWciOlsi5YW25LuW566h55CGJTE2JTI0Iiwi57O757uf566h55CGJTE2JTI0Il0sImwlbyVjJWsiOlsi5pu05pS55a+G56CBJTIwJTIyIiwi5a+G56CB5pu05pS5JTE2JTI0Iiwi6YeN572u5a+G56CBJTIwJTIyIl0sInUlcyVlJXIlMiI6WyLmrKLov47kvb/nlKglMzQlMzQiLCLnlKjmiLfnrqHnkIYlMTYlMjQiXSwibCVvJXYlZSI6WyLmjqjojZDllYblk4ElMzAlMzIiXSwibCVpJXMldCI6WyLpgInmi6nllYblk4HliIbnsbslMjQlMzAiXSwibSVhJXIlayUxIjpbIuWJjeWPsCUxNiUyNCJdLCJzJWglaSVlJWwlZCI6WyLokKXmlLbnrqHnkIYlMTYlMjQiLCLplIDph4/nrKwlMjIlMjYiXSwiYiVvJXQldCVvJW0iOlsi5LiL6L29Il0sInQlbyVwIjpbIuS4iuS8oCJdfQ==\"\r\n\r\n// 测试区域 begin ===================================\r\nconst tagList = [\"button\", \"#recommend\", \".cate\", \".elitemmenu\", \"#chartSum\", \".headcart\"]\r\nconst json2 = {\r\n  \"yes\":[\r\n    \"归还\",\r\n    \"购买%22%26\", \r\n    \"发货\"\r\n  ],\r\n  \"left\": [\r\n    \"返回登录%22%24\"\r\n  ],\r\n  \"add\": [\r\n    \"申请\", \"我要报名\", \"加入购物车%22%26\", \"支付\",\r\n    \"总计：%22%32\",\r\n  ],\r\n  \"delete\": [\r\n    \"删除\", \"移除\"\r\n  ],\r\n  \"find\": [\r\n    \"搜索\", \"显示全部\", \"查看\", \"详情\", \"信息查询%26%26\",\r\n    \"图书信息管理%16%24\",\r\n    \"商品管理%16%24\"\r\n  ],\r\n  \"t%e%a%m\": [\r\n    \"参与人员%18%24\"\r\n  ],\r\n  \"h%o%m%e\": [\r\n    \"首页%18%24\",\r\n    \"主页%16%24\"\r\n  ],\r\n  \"p%a%p%e%r\": [\r\n    \"图书管理%14%24\",\r\n    \"文件管理%16%24\"\r\n  ],\r\n  \"r%e%f%r%e%s%h\": [\r\n    \"借阅信息管理%16%24\",\r\n    \"重置\"\r\n  ],\r\n  \"s%e%t%t%i%n%g\": [\r\n    \"其他管理%16%24\",\r\n    \"系统管理%16%24\"\r\n  ],\r\n  \"l%o%c%k\": [\r\n    \"更改密码%20%22\",\r\n    \"密码更改%16%24\",\r\n    \"重置密码%20%22\"\r\n  ],\r\n  \"u%s%e%r%2\": [\r\n    \"欢迎使用%34%34\",\r\n    \"用户管理%16%24\"\r\n  ],\r\n  \"l%o%v%e\": [\r\n    \"推荐商品%30%32\"\r\n  ],\r\n  \"l%i%s%t\": [\r\n    \"选择商品分类%24%30\"\r\n  ],\r\n  \"m%a%r%k%1\": [\r\n    \"前台%16%24\"\r\n  ],\r\n  \"s%h%i%e%l%d\": [\r\n    \"营收管理%16%24\",\r\n    \"销量第%22%26\"\r\n  ],\r\n  \"b%o%t%t%o%m\": [\r\n    \"下载\"\r\n  ],\r\n  \"t%o%p\": [\r\n    \"上传\"\r\n  ]\r\n\r\n}\r\nconst json1 = {\r\n  \"yes\":[\r\n    \"登录%22%24\", \r\n    \"确定%20%22\",\r\n    \"确认%22%24\",\r\n  ],\r\n  \"left\": [\r\n    \"取消%20%22\", \"返回%20%22\"\r\n  ],\r\n  \"add\": [\r\n    \"注册%22%24\", \"新增\", \"添加\", \"创建\", \"录入\", \"新建\", \"导入\"\r\n  ],\r\n  \"edit\": [\r\n    \"修改\", \"编辑\", \"变更\", \"更改\"\r\n  ],\r\n  \"delete\": [\r\n    \"删除\", \"移除\"\r\n  ],\r\n  \"find\": [\r\n    \"搜索\", \"查看\", \"详情\", \"查询\"\r\n  ],\r\n}\r\n\r\nconsole.log(\"===================================\")\r\n\r\nlet jsonTagStr = JSON.stringify(tagList);\r\njsonTagStr = to(jsonTagStr);\r\nconsole.log(\"输出tagList密文：\")\r\nconsole.log(jsonTagStr)\r\n\r\njsonTagStr = from(jsonTagStr);\r\nconsole.log(\"输出tagList明文：\")\r\nconsole.log(jsonTagStr)\r\n\r\nconsole.log(\"===================================\")\r\n\r\nlet json1Str = JSON.stringify(json1);\r\njson1Str = to(json1Str);\r\nconsole.log(\"输出json1密文：\")\r\nconsole.log(json1Str)\r\n\r\njson1Str = from(json1Str);\r\nconsole.log(\"输出json1明文：\")\r\nconsole.log(json1Str)\r\n\r\nconsole.log(\"===================================\")\r\n\r\nlet json2Str = JSON.stringify(json2);\r\njson2Str = to(json2Str);\r\nconsole.log(\"输出json2密文：\")\r\nconsole.log(json2Str)\r\n\r\njson2Str = from(json2Str);\r\nconsole.log(\"输出json2明文：\")\r\nconsole.log(json2Str)\r\n\r\nconsole.log(\"===================================\")\r\n\r\nconsole.log(\"开始校验密文参数：\")\r\n\r\nlet checkJson1 = JSON.stringify(json1);\r\ncheckJson1 = to(checkJson1)\r\nif(enJson1 !== checkJson1) {\r\n  console.log(\"enJson1 配置未通过校验！！！\")\r\n} else {\r\n  console.log(\"enJson1 配置通过校验\")\r\n}\r\nlet checkJson2 = JSON.stringify(json2);\r\ncheckJson2 = to(checkJson2)\r\nif(enJson2 !== checkJson2) {\r\n  console.log(\"enJson2 配置未通过校验！！！\")\r\n} else {\r\n  console.log(\"enJson2 配置通过校验\")\r\n}\r\nlet checkTagJson = JSON.stringify(tagList);\r\ncheckTagJson = to(checkTagJson)\r\nif(enTagList !== checkTagJson) {\r\n  console.log(\"enTagList 配置未通过校验！！！\")\r\n} else {\r\n  console.log(\"enTagList 配置通过校验\")\r\n}\r\n// 测试区域 end ===================================\r\n\r\nfunction to(text) {\r\n  const coder = new TextEncoder();\r\n  const data = coder.encode(text);\r\n  const enData = btoa(String.fromCharCode.apply(null, data));\r\n  return enData;\r\n}\r\n\r\nfunction from(text) {\r\n  const coder = new TextDecoder();\r\n  const deData = coder.decode(Uint8Array.from(atob(text), c => c.charCodeAt(0)));\r\n  return deData;\r\n}\r\n\r\nfunction init() {\r\n  const styleElement = document.createElement('style');\r\n  const enInner = \"\"\r\n\r\n  styleElement.innerHTML = from(enInner);\r\n\r\n  document.head.appendChild(styleElement);\r\n}\r\n\r\n(function() {\r\n  init()\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}